---
import Layout from "../layouts/BlogPost.astro";
---

<Layout title="Projects">
    <p>
        Ever since my dad taught me my first few lines of BASIC, programming has
        been my passion. I'll present the highlights from recent to old:
    </p>
    <p class="alternate">
        <a href="https://biomejs.dev/"><b>Biome</b></a><br />
        As of recently, I have become a core contributor to the Biome project, building
        tooling for web developers in Rust. My main area of contribution right now
        is
        <a href="https://github.com/biomejs/biome/discussions/1762"
            >plugin support</a
        >, for which I'm integrating the <a
            href="https://docs.grit.io/tutorials/gritql">GritQL language</a
        > into the project.
    </p>
    <p class="alternate">
        <a href="https://apps.apple.com/us/app/sudoku-pi/id6467504425"
            ><b>Sudoku Pi</b></a
        ><br />
        A refreshing take on a mobile Sudoku game, designed together with
        <a href="https://www.ciyuxu.nl">my wife</a>, and built with Bevy in
        Rust. The game's in the
        <a href="https://apps.apple.com/us/app/sudoku-pi/id6467504425"
            >App Store</a
        >
        and the source code is on
        <a href="https://github.com/Couch-Chilis/sudoku-pi">GitHub</a>.
    </p>
    <p class="alternate">
        <a href="https://fiberplane.dev/"><b>Fiberplane</b></a><br />
        I was a Principal Software Engineer at Fiberplane, where we built exciting
        DevOps tooling. As part of their efforts, I created
        <a href="https://github.com/fiberplane/fp-bindgen">fp-bindgen</a>, a
        bindings generator for full-stack WASM plugins. I also built a <a
            href="https://fiberplane.com/blog/creating-a-rich-text-editor-using-rust-and-react"
            >Rich Text editor in Rust and React</a
        > and implemented their <a
            href="https://fiberplane.com/blog/a-deep-dive-into-fiberplane-s-operational-transformation"
            >Operation Transformation algorithm</a
        >.
    </p>
    <p class="alternate">
        <a href="https://www.speakap.com/"><b>Speakap</b></a><br />
        I was also a Principal Software Engineer at Speakap, where I worked for over
        7 years. Some open-source projects that I created for them are
        <a href="https://github.com/arendjr/text-clipper">text-clipper</a> and
        <a href="http://arendjr.github.io/selectivity/">Selectivity.js</a>.
    </p>
    <p class="alternate">
        <a href="https://github.com/arendjr/PlainText"><b>PlainText</b></a><br
        />
        PlainText is a MUD engine I originally built in C++ and JavaScript as a hobby.
        Later it was rewritten in Rust, mainly to gain experience with the language.
    </p>
    <p class="alternate">
        <b>Hyves</b><br />
        Hyves used to be the largest social network of the Netherlands. I worked
        there for five-and-a-half years, leading the team that created the Hyves
        Desktop suite using C++/Qt and web technologies. I also developed several
        server-side features in PHP and worked on their chat server created using
        Stackless Python. Finally, I also worked on their mobile stack creating hybrid
        PhoneGap applications for Symbian, Android, iOS and BlackBerry. Symbian in
        particular was a fun one, as I first had to built the PhoneGap container
        itself in C++ :)<br />
        An open-source project (now hopelessly outdated) I developed as part of my
        employment there was
        <a href="https://github.com/arendjr/woodpecker">Woodpecker</a>, an SCSS
        compiler written in Python.
    </p>
    <p class="alternate">
        <b>Distributed friend graph database</b><br />
        For my university's master's project, which I also did at Hyves, I created
        a proof-of-concept for a distributed friend graph database in C++. It was
        able to efficiently retrieve friend recommendations as well as determine
        whether any two people shared a connection in the third degree.
    </p>
    <p class="alternate">
        <a href="https://kde.org/"><b>KDE project</b></a><br />
        During my time at university I made several contributions to the KDE project
        on the side. From the search bar for the Konqueror web browser and the type-ahead-find
        feature in its KHTML rendering engine to support for the Windows RDP protcol
        in the KDE Remote Desktop Client application. For the latter, rather than
        reimplementing the RDP protocol, I created a patch for the
        <a href="http://www.rdesktop.org/">rdesktop application</a> so that its X11
        window could be embedded into other windows, which was then used by KRDC.
    </p>
    <p class="alternate">
        <b>Real-time raytracing engine</b><br />
        For my university's bachelor's project me and three fellow students developed
        a PoC real-time raytracing engine in C++ with CUDA support. Of course, given
        the hardware at the time, this was only feasible on low resolutions using
        various shortcuts, but it was an interesting project nonetheless.
    </p>
    <p class="alternate">
        <b>Aukyla</b><br />
        During my first part-time job, I worked as a solo developer in a
        <a href="https://www.auton.nl/">small automation firm</a> that lead to the
        formation of Aukyla Software, where I did what every programmer did at the
        time: Create their own PHP CMS. I created the
        <a href="https://sourceforge.net/projects/aukyla/"
            >Aukyla PHP Framework</a
        >, upon which I built <a href="https://sourceforge.net/projects/adms/"
            >ADMS</a
        >, an intranet-focused Document Management System, and Aukyla Site
        Manager, which powered several public websites at the time.
    </p>
    <p class="alternate">
        <a href="https://github.com/arendjr/Qivrit"><b>Qivrit</b></a><br />
        In order to help myself and fellow classmates in high-school improve our
        natural language skills, I developed a little Windows application using Borland
        C++ Builder. The concept was simple: You enter the lists of all the words
        with their translations, and the program will question you on your knowledge
        of them afterwards. I don't think I have the source to this application anymore,
        but years later, as I made an attempt to learn Hebrew, I wrote a similar
        program called Qivrit. This one was also written in C++, but using Qt and
        tests both knowledge of the Hebrew alphabet as well as basic vocabulary.
    </p>
    <p class="alternate">
        <b>Adventure</b><br />
        One of my oldest hobby projects is a game: Adventure. If my memory serves
        me right, the first version was created in QBASIC. When I started using KDE,
        I made a port called
        <a href="https://store.kde.org/p/1109408/">KAdventure</a>.
    </p>
</Layout>
